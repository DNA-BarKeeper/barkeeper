# frozen_string_literal: true

module Export
  extend ActiveSupport::Concern
  include Rails.application.routes.url_helpers

  included do
    def default_url_options
      ActionMailer::Base.default_url_options
    end
  end

  def fasta; end

  def pde_primer_read(primer_read)
    pde_header += "<seq idx=\"#{@height}\">"\
                      "<e id=\"1\">#{primer_read.file_name_id}</e>"\
                      "<e id=\"2\">#{primer_read.file_name_id}</e>"\
                      "<e id=\"32\">#{edit_primer_read_url(primer_read)}</e>"\
                      "</seq>\n"

    @block_seqs << primer_read.aligned_seq
    @height += 1

    @max_width = primer_read.aligned_seq.length if primer_read.aligned_seq.length > @max_width
  end

  def pde(contigs)
    app_url = 'https://gbol5.de/'

    pde_beginning = +'<?xml version="1.0" standalone="no"?>'\
                    "<!-- Generated by GBOL5 web app #{Time.zone.now}  -->"\
                    '<phyde id="wL6obVNH1kuwviaB" version="0.994">'\
                    '<description></description>'

    pde_header = '<header><entries>32 "GBOL5 URL" STRING</entries>'

    pde_matrix = +''

    @height = 0 # Number of lines (needed for pde dimensions)
    @max_width = 0 # Number of alignment columns

    @block_seqs = [] # Collect sequences for block, later fill with '?' up to max_width

    contigs.first.partial_cons.each do |partial_con|
      aligned_sequence = partial_con.aligned_sequence.nil? ? '' : partial_con.aligned_sequence

      partial_con.primer_reads.each do |read|
        pde_header += "<seq idx=\"#{height}\">"\
                      "<e id=\"1\">#{read.file_name_id}</e>"\
                      "<e id=\"2\">#{read.file_name_id}</e>"\
                      "<e id=\"32\">#{app_url}primer_reads/#{read.id}/edit</e>"\
                      "</seq>\n"

        block_seqs << read.aligned_seq
        height += 1

        max_width = read.aligned_seq.length if read.aligned_seq.length > max_width
      end

      pde_header += "<seq idx=\"#{height}\">"\
                    "<e id=\"1\">#{name}</e>"\
                    "<e id=\"32\">#{app_url}contigs/#{id}/edit</e>"\
                    "</seq>\n"

      block_seqs << aligned_sequence
      height += 1

      max_width = aligned_sequence.length if aligned_sequence.length > max_width
    end

    # add not_assembled stuff etc:
    if primer_reads.not_assembled.count > 0
      primer_reads.not_assembled.each do |read|
        pde_header += "<seq idx=\"#{height}\"><e id=\"1\">#{read.file_name_id}</e><e id=\"2\">#{read.file_name_id}</e><e id=\"32\">#{app_url}primer_reads/#{read.id}/edit</e></seq>\n"

        block_seqs << read.sequence
        height += 1

        max_width = read.sequence.length if read.sequence.length > max_width
      end
    end

    if primer_reads.not_used_for_assembly.count > 0
      primer_reads.not_used_for_assembly.each do |read|
        pde_header += "<seq idx=\"#{height}\"><e id=\"1\">#{read.file_name_id}</e><e id=\"2\">#{read.file_name_id}</e><e id=\"32\">#{app_url}primer_reads/#{read.id}/edit</e></seq>\n"

        block_seqs << read.sequence
        height += 1

        max_width = read.sequence.length if read.sequence.length > max_width
      end
    end

    if primer_reads.not_trimmed.count > 0
      primer_reads.not_trimmed.each do |read|
        pde_header += "<seq idx=\"#{height}\"><e id=\"1\">#{read.file_name_id}</e><e id=\"2\">#{read.file_name_id}</e><e id=\"32\">#{app_url}primer_reads/#{read.id}/edit</e></seq>\n"

        block_seqs << read.sequence
        height += 1

        max_width = read.sequence.length if read.sequence.length > max_width
      end
    end

    if primer_reads.unprocessed.count > 0
      primer_reads.unprocessed.each do |read|
        pde_header += "<seq idx=\"#{height}\"><e id=\"1\">#{read.file_name_id}</e><e id=\"2\">#{read.file_name_id}</e><e id=\"32\">#{app_url}primer_reads/#{read.id}/edit</e></seq>\n"

        block_seqs << read.sequence
        height += 1

        max_width = read.sequence.length if read.sequence.length > max_width
      end
    end

    pde_header += "</header>\n"

    pde_dimensions = "<alignment datatype=\"dna\" width=\"#{max_width}\" height=\"#{height}\" gencode=\"0\" offset=\"-1\">"

    pde_matrix_dimensions = "<block x=\"0\" y=\"0\" width=\"#{max_width}\" height=\"#{height}\">"

    block_seqs.each do |seq|
      nr_of_questionmarks_to_add = max_width - seq.length

      nr_of_questionmarks_to_add.times do
        seq += '?'
      end

      pde_matrix += "#{seq}\\FF\n"
    end

    pde_closure = '</block></matrix></alignment></phyde>'

    final_pde_str = pde_beginning + pde_dimensions + pde_header + '<matrix>' + pde_matrix_dimensions + pde_matrix + pde_closure
  end
end
