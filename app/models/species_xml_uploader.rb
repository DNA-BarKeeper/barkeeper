class SpeciesXmlUploader < ActiveRecord::Base

# write SPECIMENS & STATUS  to Excel-XML (xls) for use by ZFMK for their "Portal / db : bolgermany.de "


#todo later rename  :uploaded_file to xml_File or s.th.

  has_attached_file :uploaded_file,
                    :path => "/species.xls"

  # Validate content type
  validates_attachment_content_type :uploaded_file, :content_type => /\Aapplication\/xml/

  # Validate filename
  validates_attachment_file_name :uploaded_file, :matches => [/xls\Z/]

  def create_uploaded_file

    file_to_upload = File.open("species.xls", "w")

    file_to_upload.write(xml_string)
    file_to_upload.close
    self.uploaded_file = File.open("species.xls")
    self.save!

    # puts xml_string
  end

  def xml_string

    # get all species:
    @species=Species.includes(:family => { :order => :higher_order_taxon}).all

    @header_cells = ["UAbteilung/Klasse",
                     "Ordnung",
                     "Familie",
                     "GBoL5_TaxID",
                     "Gattung",
                     "Art",
                     "Autor",
                     "Subspecies/Varietät",
                     "Autor (ssp./var.)"
    ]

    builder = Nokogiri::XML::Builder.new do |xml|

      xml.comment("Generated by gbol5.de web app on #{Time.zone.now}")
      xml.Workbook('xmlns'=>"urn:schemas-microsoft-com:office:spreadsheet",
                   'xmlns:o'=>"urn:schemas-microsoft-com:office:office",
                   'xmlns:x'=>"urn:schemas-microsoft-com:office:excel",
                   'xmlns:ss'=>"urn:schemas-microsoft-com:office:spreadsheet",
                   'xmlns:html'=>"http://www.w3.org/TR/REC-html40") {
        xml.Worksheet('ss:Name'=>"Sheet1") {

          xml.Table {

            # header
            xml.Row{

              @header_cells.each do |o|
                xml.Cell {
                  xml.Data('ss:Type' => "String") {
                    xml.text(o)
                  }
                }
              end

            }

            @species.each do |species|
              xml.Row{

                # UAbteilung/Klasse",

                xml.Cell {
                  xml.Data('ss:Type' => "String") {
                    xml.text(species.try(:family).try(:order).try(:higher_order_taxon).try(:name))
                  }
                }

                # "Ordnung",
                xml.Cell {
                  xml.Data('ss:Type' => "String") {
                    xml.text(species.try(:family).try(:order).try(:name))
                  }
                }
                # "Familie",
                xml.Cell {
                  xml.Data('ss:Type' => "String") {
                    xml.text(species.try(:family).try(:name))
                  }
                }
                # "GBoL5_TaxID",
                xml.Cell {
                  xml.Data('ss:Type' => "String") {
                    xml.text(species.id)
                  }
                }
                # Gattung
                xml.Cell {
                  xml.Data('ss:Type' => "String") {
                    xml.text(species.genus_name)
                  }
                }
                # Art
                xml.Cell {
                  xml.Data('ss:Type' => "String") {
                    xml.text(species.species_epithet)
                  }
                }
                # Autor
                xml.Cell {
                  xml.Data('ss:Type' => "String") {
                    xml.text(species.author)
                  }
                }
                # "Subspecies/Varietät",
                xml.Cell {
                  xml.Data('ss:Type' => "String") {
                    xml.text(species.infraspecific)
                  }
                }
                #  "Autor (ssp./var.)"
                xml.Cell {
                  xml.Data('ss:Type' => "String") {
                    xml.text(species.author_infra)
                  }
                }
              }
            end
          }
        }
      }

    end

    builder.to_xml

  end


end