upstream rails_app {
   server app:$PUMA_PORT;
}

server {
    listen $SSL_PORT default_server ssl http2;
    listen [::]:$SSL_PORT ssl http2;

    server_name $PROJECT_DOMAIN;

    ssl_certificate /etc/nginx/ssl/live/$PROJECT_DOMAIN/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/$PROJECT_DOMAIN/privkey.pem;

    root   $RAILS_ROOT/public;
    index  index.html;

    client_max_body_size 1G;

    access_log $RAILS_ROOT/log/nginx.access.log;
    error_log $RAILS_ROOT/log/nginx.error.log;

    # deny requests for files that should never be accessed
    location ~ /\. {
      deny all;
    }
    location ~* ^.+\.(rb|log)$ {
      deny all;
    }

    # serve static (compiled) assets directly if they exist (for rails production)
    location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/   {
      try_files $uri @rails;
      access_log off;
      gzip_static on;
      # to serve pre-gzipped version
      expires max;
      add_header Cache-Control public;

      add_header Last-Modified "";
      add_header ETag "";
      break;
   }

   # send non-static file requests to the app server
   location / {
      try_files $uri @rails;
   }
   location @rails {
      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://rails_app;
   }
}

server {
    listen $PORT;
    listen [::]:$PORT;

    server_name $PROJECT_DOMAIN www.$PROJECT_DOMAIN;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$PROJECT_DOMAIN$request_uri;
    }
}